{"version":3,"sources":["myChartsThis.js","header.js","mapthis.js","createmap.js","mytabs.js","App.js","serviceWorker.js","index.js"],"names":["LineChart","props","chartRef0","React","createRef","chartRef1","chartRef2","updateLineChart0","console","log","state","myChartRef0","current","getContext","ifOverview","ifCases","Chart","type","data","labels","dataGottenBack","map","d","date","reverse","datasets","newCasesByPublishDate","options","scales","xAxes","distribution","updateLineChart1","myChartRef1","covidOccupiedMVBeds","updateLineChart2","transformedData","obj","x","y","transformedData2","myChartRef2","label","fill","borderColor","tooltips","mode","intersect","hover","yAxes","display","labelString","ticks","beginAtZero","getDataForChart","areaType","areaName","chart0Title","chart1Title","chart2Title","ifDeaths","ifTesting","ifHospital","urlForChart0","this","setState","fetch","then","res","json","joined","concat","prevProps","Card","CardHeader","title","action","IconButton","aria-label","CardContent","id","ref","CardActions","Component","useStyles","makeStyles","typographyStyles","flex","heightOfThis","height","Header","classes","AppBar","className","position","Toolbar","Typography","style","Map","center","locationStart","L","zoom","layers","tileLayer","attribution","layer","layerGroup","addTo","updateMarkers","markersData","updateLocation","latOfArea","lonOfArea","clearLayers","forEach","marker","latLng","valueOfZoom","includes","setView","MappedClassOf","handleLangChange","onSelectLanguage","addMarker","lastMarker","length","lat","lng","selectedCode","selectedLanguage","dataGottenBackFromAPI","lon","onClick","TabContainer","component","padding","children","SimpleTabs","Tabvalue","thisGraphData","handleChange","event","value","open","root","Tabs","onChange","variant","scrollButtons","Tab","withStyles","theme","flexGrow","backgroundColor","palette","background","paper","App","language","search","dataForSearch","handleLanguage","langValue","handleAreaName","target","substr","placeholder","updateSearch","bind","gottenPlaceTarget","currentTarget","innerHTML","urlToData","filteredSearchPlaces","filter","place","toLowerCase","indexOf","Grid","container","direction","item","xs","sm","md","displayTextBox","i","clickedPlace","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.97695f05.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Chart from 'chart.js';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { Avatar, IconButton, CardMedia } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\nexport default class LineChart extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      // This is where the data is being stored\n      dataGottenBack : [],\n      getDataForChart: \"\",\n      areaType: \"\",\n      areaName: \"\",\n\n      chart0Title: \"Daily Cases:\",\n      chart1Title: \"Patients in ventilation beds:\",\n      chart2Title: \"Chart with results together for first two:\",\n\n      ifOverview: true,\n\n      ifCases: true,\n\n      ifDeaths: false,\n      ifTesting: false,\n      ifHospital: false,\n\n      urlForChart0: 'https://api.coronavirus-staging.data.gov.uk/v1/data?filters=areaName=United%2520Kingdom;areaType=overview&structure=%7B%22areaType%22:%22areaType%22,%22areaName%22:%22areaName%22,%22areaCode%22:%22areaCode%22,%22date%22:%22date%22,%22newCasesByPublishDate%22:%22newCasesByPublishDate%22,%22cumCasesByPublishDate%22:%22cumCasesByPublishDate%22%7D&format=json',\n    }\n\n  }\n\n  // Chart 0\n  chartRef0 = React.createRef();\n\n  // Chart 1\n  chartRef1 = React.createRef();\n\n  // Chart 2\n  chartRef2 = React.createRef();\n\n  // Get the data and then run the update for the chart to be displayed for each one\n  componentDidMount() {\n    this.setState({\n      areaName: this.props.areaName,\n      areaType: this.props.areaType,\n      ifOverview: this.props.ifOverview,\n      ifCases: this.props.ifCases,\n      ifDeaths: this.props.ifDeaths,\n      ifTesting: this.props.ifTesting,\n      ifHospital: this.props.ifHospital,\n      // chart0Title: this.props.chart0Title,\n      // chart1Title: this.props.chart1Title,\n      // chart2Title: this.props.chart2Title,\n    })\n\n    if (this.state.ifOverview) {\n      fetch('https://api.coronavirus-staging.data.gov.uk/v1/data?filters=areaName=United%2520Kingdom;areaType=overview&structure=%7B%22areaType%22:%22areaType%22,%22areaName%22:%22areaName%22,%22areaCode%22:%22areaCode%22,%22date%22:%22date%22,%22newCasesByPublishDate%22:%22newCasesByPublishDate%22,%22cumCasesByPublishDate%22:%22cumCasesByPublishDate%22%7D&format=json').then(res => res.json()).then(data => {\n        var joined = this.state.dataGottenBack.concat(data)\n        // var dataToAdd = data;\n\n        this.setState({\n          dataGottenBack: joined,\n          getDataForChart: this.props.getDataForChart,\n\n        }, () => {\n          this.updateLineChart0();\n        })\n\n      });\n    } else {\n      this.setState({\n        getDataForChart: \"no\",\n      })\n      fetch('https://api.coronavirus-staging.data.gov.uk/v1/data?filters=areaType=nation;areaName=England&structure=%7B%22areaType%22:%22areaType%22,%22areaName%22:%22areaName%22,%22areaCode%22:%22areaCode%22,%22date%22:%22date%22,%22newCasesBySpecimenDate%22:%22newCasesBySpecimenDate%22,%22cumCasesBySpecimenDate%22:%22cumCasesBySpecimenDate%22%7D&format=json').then(res => res.json()).then(data => {\n        var joined = this.state.dataGottenBack.concat(data)\n        // var dataToAdd = data;\n\n        this.setState({\n          dataGottenBack: joined,\n          getDataForChart: this.props.getDataForChart,\n\n        }, () => {\n          this.updateLineChart0();\n        })\n\n      });\n    }\n\n    fetch('https://api.coronavirus-staging.data.gov.uk/v1/data?filters=areaName=United%2520Kingdom;areaType=overview&structure=%7B%22areaType%22:%22areaType%22,%22areaName%22:%22areaName%22,%22areaCode%22:%22areaCode%22,%22date%22:%22date%22,%22covidOccupiedMVBeds%22:%22covidOccupiedMVBeds%22%7D&format=json').then(res => res.json()).then(data => {\n      var joined = this.state.dataGottenBack.concat(data)\n      // var dataToAdd = data;\n\n      this.setState({\n        dataGottenBack: joined,\n\n      }, () => {\n        this.updateLineChart1();\n        this.updateLineChart2();\n      })\n\n    });\n  }\n\n\n\n  componentDidUpdate(prevProps) {\n  // Typical usage (don't forget to compare props):\n  if (this.props.areaName !== prevProps.areaName) {\n    console.log(23423942);\n    this.setState({\n        areaName: this.props.areaName,\n      });\n  }\n\n\n}\n\n\n  updateLineChart0 = () => {\n    console.log(12345);\n    console.log(this);\n\n    console.log(this.state);\n\n    const myChartRef0 = this.chartRef0.current.getContext(\"2d\");\n\n    if (this.state.ifOverview) {\n\n      if (this.state.ifCases) {\n\n    var myChart0 = new Chart(myChartRef0, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        labels: this.state.dataGottenBack[0].data.map(d => d.date).reverse(),\n        datasets: [\n          {\n            data: this.state.dataGottenBack[0].data.map(d => d.newCasesByPublishDate).reverse(),\n\n          }]\n        },\n        options: {\n          scales: {\n            xAxes: [{\n              type: 'time',\n              distribution: 'series'\n            }]\n          }\n        }\n      });\n\n    }\n\n    }\n  }\n\n\n\n    updateLineChart1 = () => {\n\n      console.log(this.state);\n\n      const myChartRef1 = this.chartRef1.current.getContext(\"2d\");\n\n      var myChart1 = new Chart(myChartRef1, {\n        type: \"line\",\n        data: {\n          //Bring in data\n          labels: this.state.dataGottenBack[1].data.map(d => d.date).reverse(),\n          datasets: [\n            {\n              data: this.state.dataGottenBack[1].data.map(d => d.covidOccupiedMVBeds).reverse(),\n            }]\n          },\n          options: {\n            scales: {\n              xAxes: [{\n                type: 'time',\n                distribution: 'series'\n              }]\n            }\n          }\n        });\n      }\n\n\n      updateLineChart2 = () => {\n\n        const transformedData = this.state.dataGottenBack[0].data.map(obj=>{\n          return {\n            x:obj.date,\n            y:obj.newCasesByPublishDate,\n          }\n        })\n\n        const transformedData2 = this.state.dataGottenBack[1].data.map(obj=>{\n          return {\n            x:obj.date,\n            y:obj.covidOccupiedMVBeds,\n          }\n        })\n\n\n        console.log(transformedData)\n\n        console.log(this.state);\n\n        const myChartRef2 = this.chartRef2.current.getContext(\"2d\");\n\n        var myChart2 = new Chart(myChartRef2, {\n          type: \"scatter\",\n          data: {\n            //Bring in data\n            labels: this.state.dataGottenBack[0].data.map(d => d.date).reverse(),\n            datasets: [\n              {\n                label: 'Chart 0',\n                data: transformedData,\n                fill: false,\n                borderColor: 'rgba(0, 200, 0, 1)',\n              },\n              {\n                label: 'Chart 1',\n                data: transformedData2,\n                fill: false,\n                borderColor: 'rgba(150, 50, 48, 1)'\n              }\n\n            ]\n          },\n          options: {\n            tooltips: {\n              mode: 'index',\n              intersect: false,\n            },\n            hover: {\n              mode: 'nearest',\n              // intersect: true\n            },\n            scales: {\n              yAxes: [{\n                display: true,\n                labelString: \"Frequency (Hz)\",\n                ticks: {\n                  beginAtZero:true\n                }\n              }],\n              // Important to include this\n              xAxes: [{\n                type: 'time',\n                distribution: 'series'\n              }]\n            },\n          }\n        });\n      }\n\n\n\n\n      render() {\n        const { data, labels } = this.state;\n        console.log(this.state);\n\n        return (\n          <div >\n            <div>\n              {this.state.areaName}\n              </div>\n            {/* The area name will be displayed at the top */}\n          <Card>\n          <CardHeader\n\n          title={this.state.chart0Title}\n          action={\n            <IconButton aria-label=\"settings\">\n            <AspectRatioIcon />\n            </IconButton>\n          }\n          />\n          <CardContent>\n          <canvas id=\"myChart0\" ref={this.chartRef0} />\n          </CardContent>\n          <CardActions>\n          <IconButton aria-label=\"settings\">\n          <MoreVertIcon />\n          </IconButton>\n          </CardActions>\n          </Card>\n\n\n          <Card>\n          <CardHeader\n          title={this.state.chart1Title}\n          action={\n            <IconButton aria-label=\"settings\">\n            <AspectRatioIcon />\n            </IconButton>\n          }\n          />\n          <CardContent>\n          <canvas id=\"myChart1\" ref={this.chartRef1} />\n          </CardContent>\n          <CardActions>\n          <IconButton aria-label=\"settings\">\n          <MoreVertIcon />\n          </IconButton>\n          </CardActions>\n          </Card>\n\n\n          <Card>\n          <CardHeader\n          title={this.state.chart2Title}\n          action={\n            <IconButton aria-label=\"settings\">\n            <AspectRatioIcon />\n            </IconButton>\n          }\n          />\n          <CardContent>\n          <canvas id=\"myChart2\" ref={this.chartRef2} />\n          </CardContent>\n          <CardActions>\n          <IconButton aria-label=\"settings\">\n          <MoreVertIcon />\n          </IconButton>\n          </CardActions>\n          </Card>\n\n\n          </div>\n        );\n      };\n\n    };\n","import React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport AcUnitRoundedIcon from \"@material-ui/icons/AcUnitRounded\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport InfoIcon from '@material-ui/icons/Info';\n\n\nconst useStyles = makeStyles(() => ({\n  typographyStyles: {\n    flex: 1,\n  },\n  heightOfThis: {\n    height: 45\n  }\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <AppBar className={classes.heightOfThis} position=\"static\">\n      <Toolbar>\n        <Typography className={classes.typographyStyles}>\n          COVID-19 Observer\n        </Typography>\n        <InfoIcon />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport L from \"leaflet\";\n\nconst style = {\n  // width: \"100%\",\n  height: \"75vh\",\n  flex: 1\n};\n\nclass Map extends React.Component {\n  state = {\n    center: [54.7023545, -3.2765753],\n    locationStart: this.props.locationStart,\n  }\n\n\n  componentDidMount() {\n    // create map\n    this.map = L.map(\"map\", {\n      center: this.state.center,\n      zoom: 5,\n      layers: [\n        L.tileLayer(\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\", {\n          attribution:\n            '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        })\n      ]\n    });\n\n    // add layer\n    this.layer = L.layerGroup().addTo(this.map);\n    this.updateMarkers(this.props.markersData);\n  }\n  componentDidUpdate({ markersData, locationStart }) {\n    // check if data has changed\n    if (this.props.markersData !== markersData) {\n      this.updateMarkers(this.props.markersData);\n    }\n\n    console.log('testing000');\n\n    if (this.state.center !== locationStart) {\n      console.log('not equal');\n      console.log(this.props.locationStart);\n      this.updateLocation(this.props.latOfArea, this.props.lonOfArea, this.props.locationStart);\n    }\n  }\n\n  updateMarkers(markersData) {\n    this.layer.clearLayers();\n    markersData.forEach(marker => {\n      L.marker(marker.latLng, { title: marker.title }).addTo(this.layer);\n    });\n  }\n\n  updateLocation(latOfArea, lonOfArea, locationStart) {\n    let valueOfZoom = 6\n    this.layer.clearLayers();\n    console.log(this.props.locationStart);\n    if (this.props.locationStart) {\n\n      // Change the zoom out if it's for the United Kingdom, otherwise the zoom will be more zoomed in if selecting a region\n      if (this.props.locationStart.includes(\"United Kingdom\")) {\n        valueOfZoom = 5\n      }\n    }\n    console.log(valueOfZoom);\n    this.map.setView([latOfArea, lonOfArea], valueOfZoom);\n  }\n\n  render() {\n    return <div id=\"map\" style={style} />;\n  }\n}\n\nexport default Map;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Map from './mapthis';\nimport { DropdownList } from 'react';\n\nclass MappedClassOf extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      markersData: [\n        {\n          title: 1,\n          latLng: {\n            lat: 49.8419,\n            lng: 24.0315,\n          }\n        },         {\n          title: 2,\n          latLng: {\n            lat: 49.8420,\n            lng: 24.0316,\n          }\n        }\n      ],\n      selectedCode: '',\n      selectedLanguage: 3,\n      areaName: props.areaName,\n\n    };\n  }\n\n  handleLangChange = () => {\n      var lang = 'test';\n      this.props.onSelectLanguage(lang);\n      console.log('done');\n  }\n\n  addMarker = () => {\n    const { markersData } = this.state;\n    const lastMarker = markersData[markersData.length - 1];\n\n    this.setState({\n      markersData: [\n        ...markersData,\n        {\n          title: +lastMarker.title + 1,\n          latLng: {\n            lat: lastMarker.latLng.lat + 0.0001,\n            lng: lastMarker.latLng.lng + 0.0001,\n          }\n        }\n      ]\n    });\n    console.log(markersData);\n    this.handleLangChange();\n  };\n\n\n  render() {\n    const { markersData, areaName } = this.state;\n\n    let latOfArea = \"\";\n    let lonOfArea = \"\";\n\n    if (this.props.dataGottenBackFromAPI[0]) {\n      latOfArea = this.props.dataGottenBackFromAPI[0].lat;\n      lonOfArea = this.props.dataGottenBackFromAPI[0].lon;\n  }\n\n    console.log(this);\n    return (\n      <div>\n      <Map className=\"mappedOfClass\" markersData={markersData} locationStart={this.props.areaName} latOfArea={latOfArea} lonOfArea={lonOfArea} />\n\n      <button onClick={this.props.onSelectLanguage}>\n      Testingofbutton\n      </button>\n      </div>\n    );\n  }\n}\n\nexport default MappedClassOf;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LineChart from \"./myChartsThis.js\";\n\n\nfunction TabContainer(props) {\n  return (\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  }\n});\n\nclass SimpleTabs extends React.Component {\n  state = {\n    Tabvalue: 0,\n    thisGraphData: [],\n  };\n\n  componentDidMount() {\n    if (this.props.open) {\n      this.setState({ Tabvalue: this.props.open });\n    }\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ Tabvalue: value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { Tabvalue } = this.state;\n\n    let value = Tabvalue;\n    console.log(this.props.areaName);\n\n    return (\n      <div className={classes.root}>\n      <AppBar position=\"static\">\n      <Tabs value={value}\n      onChange={this.handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      aria-label=\"scrollable auto tabs example\"\n      >\n      <Tab label=\"Overview\" />\n      <Tab label=\"Charts\" />\n      <Tab label=\"Cases\" />\n      <Tab label=\"Hospitalised\" />\n      <Tab label=\"Testing\" />\n      <Tab label=\"Deaths\" />\n      <Tab label=\"Forecasting\" />\n          </Tabs>\n        </AppBar>\n        {value === 0 && <TabContainer>{this.props.areaName} Overview</TabContainer>}\n        {value === 1 && <TabContainer><LineChart getDataForChart={this.props.areaName} ifOverview={1} ifCases={1} areaName={this.props.areaName} /></TabContainer>}\n        {value === 2 && <TabContainer>Cases</TabContainer>}\n        {value === 3 && <TabContainer>Hospitalised</TabContainer>}\n        {value === 4 && <TabContainer>Testing</TabContainer>}\n        {value === 5 && <TabContainer>Deaths</TabContainer>}\n        {value === 6 && <TabContainer>Forecasting</TabContainer>}\n      </div>\n    );\n  }\n}\n\nSimpleTabs.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SimpleTabs);\n","import React, { useState, useEffect } from 'react';\nimport { Component } from \"react\";\nimport './App.css';\nimport LineChart from \"./myChartsThis.js\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./header.js\";\nimport MappedClassOf from './createmap';\nimport Map from './mapthis';\nimport SimpleTabs from './mytabs';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nclass App extends Component {\n\n  state = {\n    language: '',\n    areaName: 'United Kingdom',\n    search: '',\n    dataForSearch: ['United Kingdom', 'England', 'Northern Ireland', 'Scotland', 'Wales'],\n    dataGottenBackFromAPI: [],\n  }\n\n  handleLanguage = (langValue) => {\n    this.setState({\n        language: 'blah',\n        areaName: '',\n      });\n  }\n\n  handleAreaName = (langValue) => {\n    console.log('handleAreaName');\n    this.setState({\n        areaName: langValue,\n      });\n  }\n\nupdateSearch(event) {\n  console.log(event.target.value);\n\n  // Limit to 20 characters in the search box\n  this.setState({\n    search: event.target.value.substr(0, 20)\n  })\n\n}\n\ndisplayTextBox() {\n  return (\n    <input placeholder=\"Search\" type=\"text\"\n    value={this.state.search}\n    onChange={this.updateSearch.bind(this)} />\n\n  );\n}\n\nclickedPlace(event) {\n  const gottenPlaceTarget = event.currentTarget.innerHTML;\n  // const gottenPlaceTargetInner = gottenPlaceTarget.innerHTML;\n  console.log(gottenPlaceTarget);\n\n  const urlToData = 'https://nominatim.openstreetmap.org/search?q=' + gottenPlaceTarget + ',%20United%20Kingdom';\n  // Need to give the format of it too\n  const formatForDataOutput = '&format=json';\n\n  console.log(urlToData);\n\n  fetch(urlToData + formatForDataOutput).then(res => res.json()).then(data => {\n\n    this.setState({\n      dataGottenBackFromAPI: [],\n    }, () => {\n      console.log(\"cleared\");\n    })\n\n\n    var joined = this.state.dataGottenBackFromAPI.concat(data[0]);\n\n    this.setState({\n      dataGottenBackFromAPI: joined,\n      areaName: gottenPlaceTarget,\n    }, () => {\n      console.log(this.state);\n    })\n\n  });\n\n  // event.preventDefault();\n  console.log(this);\n}\n\n\n  render() {\n\n    let filteredSearchPlaces = this.state.dataForSearch.filter(\n      (place) => {\n        return place.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\n      }\n    );\n\n    function handleLangChange(e) {\n        var lang = e.target.value;\n        console.log('done');\n    }\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <Header />\n      </Grid>\n      <Grid item container>\n        <Grid item xs={2} sm={2} md={2}>\n        <div>\n          Search for the region you want\n          {this.displayTextBox()}\n\n            {filteredSearchPlaces.map((place, i)=> {\n              return <li onClick={this.clickedPlace.bind(this)} key={i}> {place} </li>;\n            })}\n        </div>\n\n        </Grid>\n        <Grid item xs={10} sm={5} md={5}>\n        <MappedClassOf areaName={this.state.areaName} onSelectLanguage={this.handleLanguage} dataGottenBackFromAPI={this.state.dataGottenBackFromAPI} />\n        Test test test test test test test test test test test test test test test test test test test test test test test\n        </Grid>\n        <Grid item xs={12} sm={5} md={5}>\n        <SimpleTabs handleAreaName={this.handleAreaName} areaName={this.state.areaName} dataGottenBackFromAPI={this.state.dataGottenBackFromAPI} />\n        </Grid>\n\n      </Grid>\n    </Grid>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Chart from \"chart.js\";\nimport LineChart from \"./myChartsThis.js\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./header.js\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}